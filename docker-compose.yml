services:
  postgres:
    image: postgis/postgis:latest
    volumes:
      - postgres_data:/var/lib/postgresql/datas
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PORT: 5432
    ports:
      - "54320:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  be:
    build: .
    command: >
      sh -c "if [ "$DEBUG" = "True" ]; then
               poetry run python manage.py runserver 0.0.0.0:8000;
             else
               poetry run gunicorn config.wsgi:application --bind 0.0.0.0:8000;
             fi"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PORT: 5432
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
